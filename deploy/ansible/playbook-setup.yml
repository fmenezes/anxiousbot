---
- name: Wait for instances
  hosts: tag_Project_anxiousbot
  gather_facts: no
  tasks:
    - name: Wait for ssh access
      wait_for_connection:


- name: Configure updater instances
  hosts: tag_Role_updater
  become: yes
  vars_files:
    - vars/secrets.yml

  tasks:
    - name: Update all packages on Amazon Linux
      yum:
        name: '*'
        state: latest

    - name: Install required system packages
      yum:
        name:
          - git
          - python3.11
          - python3.11-pip
          - amazon-cloudwatch-agent
          - cronie
          - awscli
          - logrotate
          - memcached
        state: latest

    - name: Install Poetry
      pip:
        name: poetry
        executable: pip3.11
        extra_args: --ignore-installed

    - name: Create CloudWatch Agent configuration directory
      file:
        path: /opt/aws/amazon-cloudwatch-agent/etc
        state: directory
        mode: '0755'

    - name: Create logs directory
      file:
        path: /var/log/anxiousbot
        state: directory
        mode: '0755'

    - name: Create CloudWatch Agent configuration file
      copy:
        dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
        content: |
          {
            "agent": {
              "metrics_collection_interval": 60,
              "run_as_user": "root"
            },
            "metrics": {
              "append_dimensions": {
                "InstanceId": "${aws:InstanceId}"
              },
              "metrics_collected": {
                "cpu": {
                  "measurement": [
                    "cpu_usage_idle",
                    "cpu_usage_iowait",
                    "cpu_usage_user",
                    "cpu_usage_system"
                  ],
                  "metrics_collection_interval": 60,
                  "resources": [
                    "*"
                  ]
                },
                "mem": {
                  "measurement": [
                    "mem_used_percent"
                  ],
                  "metrics_collection_interval": 60
                },
                "net": {
                  "measurement": [
                    "bytes_sent",
                    "bytes_recv"
                  ],
                  "metrics_collection_interval": 60,
                  "resources": [
                    "*"
                  ]
                }
              }
            },
            "logs": {
              "logs_collected": {
                "files": {
                  "collect_list": [
                    {
                      "file_path": "/var/log/anxiousbot/stdout.log",
                      "log_group_name": "anxiousbot-updater-logs",
                      "log_stream_name": "{instance_id}-stdout-logs",
                      "timezone": "UTC"
                    },
                    {
                      "file_path": "/var/log/anxiousbot/stdout.log.*",
                      "log_group_name": "anxiousbot-updater-logs",
                      "log_stream_name": "{instance_id}-stdout-logs",
                      "timezone": "UTC"
                    },
                    {
                      "file_path": "/var/log/anxiousbot/stderr.log",
                      "log_group_name": "anxiousbot-updater-logs",
                      "log_stream_name": "{instance_id}-stderr-logs",
                      "timezone": "UTC"
                    },
                    {
                      "file_path": "/var/log/anxiousbot/stderr.log.*",
                      "log_group_name": "anxiousbot-updater-logs",
                      "log_stream_name": "{instance_id}-stderr-logs",
                      "timezone": "UTC"
                    }
                  ]
                }
              },
              "log_stream_name": "anxiousbot_log_stream"
            }
          }

    - name: Clone the GitHub repository
      git:
        repo: 'https://{{ github_token }}@github.com/fmenezes/anxiousbot.git'
        dest: /opt/anxiousbot

    - name: Install dependencies with Poetry
      shell: |
        cd /opt/anxiousbot
        poetry install
      args:
        executable: /bin/bash

    - name: Copy systemd service file
      copy:
        dest: /etc/systemd/system/anxiousbot.service
        content: |
          [Unit]
          Description=Anxiousbot Service
          After=network.target

          [Service]
          User=root
          Group=root
          WorkingDirectory=/opt/anxiousbot
          ExecStart=/usr/local/bin/poetry run updater
          Restart=always
          RestartSec=5s
          StandardOutput=append:/var/log/anxiousbot/stdout.log
          StandardError=append:/var/log/anxiousbot/stderr.log

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: 0644

    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: Symlink .env file
      ansible.builtin.file:
        src: /etc/anxiousbot/.env
        dest: /opt/anxiousbot/.env
        owner: root
        group: root
        state: link

    - name: add secrets to .env
      blockinfile:
        path: /opt/anxiousbot/.env
        block: |
          BOT_TOKEN={{ bot_token }}
          BOT_CHAT_ID={{ bot_chat_id }}
          BINANCE_API_KEY={{ binance_api_key }}
          BINANCE_SECRET={{ binance_secret }}
          KUCOIN_API_KEY={{ kucoin_api_key }}
          KUCOIN_SECRET={{ kucoin_secret }}
          KUCOIN_PASSPHRASE={{ kucoin_passphrase }}
          BITGET_API_KEY={{ bitget_api_key }}
          BITGET_SECRET={{ bitget_secret }}
          BITMART_API_KEY={{ bitmart_api_key }}
          BITMART_SECRET={{ bitmart_secret }}
          COINBASE_API_KEY={{ coinbase_api_key }}
          COINBASE_SECRET={{ coinbase_secret }}
        create: yes
        marker: ""

    - name: Enable and start CloudWatch Agent service
      systemd:
        name: amazon-cloudwatch-agent
        enabled: yes
        state: started

    - name: Create script to delete old log files
      copy:
        dest: /etc/anxiousbot/delete_old_logs.sh
        content: |
          #!/bin/bash
          find /var/log/anxiousbot/ -type f -name "*.log.*" -mtime +1 -exec rm -f {} \;
        owner: root
        group: root
        mode: 0755

    - name: Create logrotate configuration for Anxiousbot logs
      copy:
        dest: /etc/logrotate.d/anxiousbot
        content: |
          /var/log/anxiousbot/*.log {
            daily
            rotate 1
            compress
            missingok
            notifempty
            create 0644 root root
            sharedscripts
            postrotate
              systemctl reload anxiousbot > /dev/null 2>/dev/null || true
              /etc/anxiousbot/delete_old_logs.sh
            endscript
          }
        owner: root
        group: root
        mode: 0644

    - name: Enable and start Anxiousbot Service
      systemd:
        name: anxiousbot
        state: started
        enabled: yes


- name: Configure dealer instances
  hosts: tag_Role_dealer
  become: yes
  vars_files:
    - vars/secrets.yml

  tasks:
    - name: Update all packages on Amazon Linux
      yum:
        name: '*'
        state: latest

    - name: Install required system packages
      yum:
        name:
          - git
          - python3.11
          - python3.11-pip
          - amazon-cloudwatch-agent
          - cronie
          - awscli
          - logrotate
          - memcached
        state: latest

    - name: Install Poetry
      pip:
        name: poetry
        executable: pip3.11
        extra_args: --ignore-installed

    - name: Create CloudWatch Agent configuration directory
      file:
        path: /opt/aws/amazon-cloudwatch-agent/etc
        state: directory
        mode: '0755'

    - name: Create logs directory
      file:
        path: /var/log/anxiousbot
        state: directory
        mode: '0755'

    - name: Create CloudWatch Agent configuration file
      copy:
        dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
        content: |
          {
            "agent": {
              "metrics_collection_interval": 60,
              "run_as_user": "root"
            },
            "metrics": {
              "append_dimensions": {
                "InstanceId": "${aws:InstanceId}"
              },
              "metrics_collected": {
                "cpu": {
                  "measurement": [
                    "cpu_usage_idle",
                    "cpu_usage_iowait",
                    "cpu_usage_user",
                    "cpu_usage_system"
                  ],
                  "metrics_collection_interval": 60,
                  "resources": [
                    "*"
                  ]
                },
                "mem": {
                  "measurement": [
                    "mem_used_percent"
                  ],
                  "metrics_collection_interval": 60
                },
                "net": {
                  "measurement": [
                    "bytes_sent",
                    "bytes_recv"
                  ],
                  "metrics_collection_interval": 60,
                  "resources": [
                    "*"
                  ]
                }
              }
            },
            "logs": {
              "logs_collected": {
                "files": {
                  "collect_list": [
                    {
                      "file_path": "/var/log/anxiousbot/stdout.log",
                      "log_group_name": "anxiousbot-dealer-logs",
                      "log_stream_name": "{instance_id}-stdout-logs",
                      "timezone": "UTC"
                    },
                    {
                      "file_path": "/var/log/anxiousbot/stdout.log.*",
                      "log_group_name": "anxiousbot-dealer-logs",
                      "log_stream_name": "{instance_id}-stdout-logs",
                      "timezone": "UTC"
                    },
                    {
                      "file_path": "/var/log/anxiousbot/stderr.log",
                      "log_group_name": "anxiousbot-dealer-logs",
                      "log_stream_name": "{instance_id}-stderr-logs",
                      "timezone": "UTC"
                    },
                    {
                      "file_path": "/var/log/anxiousbot/stderr.log.*",
                      "log_group_name": "anxiousbot-dealer-logs",
                      "log_stream_name": "{instance_id}-stderr-logs",
                      "timezone": "UTC"
                    },
                    {
                      "file_path": "/var/log/anxiousbot/s3sync.log",
                      "log_group_name": "anxiousbot-dealer-logs",
                      "log_stream_name": "{instance_id}-s3sync-logs",
                      "timezone": "UTC"
                    },
                    {
                      "file_path": "/var/log/anxiousbot/s3sync.log.*",
                      "log_group_name": "anxiousbot-dealer-logs",
                      "log_stream_name": "{instance_id}-s3sync-logs",
                      "timezone": "UTC"
                    }
                  ]
                }
              },
              "log_stream_name": "anxiousbot_log_stream"
            }
          }

    - name: Clone the GitHub repository
      git:
        repo: 'https://{{ github_token }}@github.com/fmenezes/anxiousbot.git'
        dest: /opt/anxiousbot

    - name: Install dependencies with Poetry
      shell: |
        cd /opt/anxiousbot
        poetry install
      args:
        executable: /bin/bash

    - name: Copy systemd service file
      copy:
        dest: /etc/systemd/system/anxiousbot.service
        content: |
          [Unit]
          Description=Anxiousbot Service
          After=network.target

          [Service]
          User=root
          Group=root
          WorkingDirectory=/opt/anxiousbot
          ExecStart=/usr/local/bin/poetry run dealer
          Restart=always
          RestartSec=5s
          StandardOutput=append:/var/log/anxiousbot/stdout.log
          StandardError=append:/var/log/anxiousbot/stderr.log

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: 0644

    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: Symlink .env file
      ansible.builtin.file:
        src: /etc/anxiousbot/.env
        dest: /opt/anxiousbot/.env
        owner: root
        group: root
        state: link

    - name: add secrets to .env
      blockinfile:
        path: /opt/anxiousbot/.env
        block: |
          BOT_TOKEN={{ bot_token }}
          BOT_CHAT_ID={{ bot_chat_id }}
          BINANCE_API_KEY={{ binance_api_key }}
          BINANCE_SECRET={{ binance_secret }}
          KUCOIN_API_KEY={{ kucoin_api_key }}
          KUCOIN_SECRET={{ kucoin_secret }}
          KUCOIN_PASSPHRASE={{ kucoin_passphrase }}
          BITGET_API_KEY={{ bitget_api_key }}
          BITGET_SECRET={{ bitget_secret }}
          BITMART_API_KEY={{ bitmart_api_key }}
          BITMART_SECRET={{ bitmart_secret }}
          COINBASE_API_KEY={{ coinbase_api_key }}
          COINBASE_SECRET={{ coinbase_secret }}
        create: yes
        marker: ""

    - name: Enable and start CloudWatch Agent service
      systemd:
        name: amazon-cloudwatch-agent
        enabled: yes
        state: started

    - name: Add cronjob script
      copy:
        dest: /etc/anxiousbot/s3sync.sh
        content: |
          #!/bin/bash
          source "/opt/anxiousbot/.env"
          DATA_DIR="/opt/anxiousbot/data"
          aws s3 sync "$DATA_DIR" "s3://$S3BUCKET" --exclude .gitkeep
          ls -laA "$DATA_DIR" | grep -v "$(date +%Y-%m-%d).csv" | grep -v .gitkeep | xargs rm -rf
        owner: root
        group: root
        mode: 0744

    - name: Add cronjob
      cron:
        name: "Run script every hour"
        minute: "0"
        job: "/etc/anxiousbot/s3sync.sh >> /var/log/anxiousbot/s3sync.log 2>&1"

    - name: Create script to delete old log files
      copy:
        dest: /etc/anxiousbot/delete_old_logs.sh
        content: |
          #!/bin/bash
          find /var/log/anxiousbot/ -type f -name "*.log.*" -mtime +1 -exec rm -f {} \;
        owner: root
        group: root
        mode: 0755

    - name: Create logrotate configuration for Anxiousbot logs
      copy:
        dest: /etc/logrotate.d/anxiousbot
        content: |
          /var/log/anxiousbot/*.log {
            daily
            rotate 1
            compress
            missingok
            notifempty
            create 0644 root root
            sharedscripts
            postrotate
              systemctl reload anxiousbot > /dev/null 2>/dev/null || true
              /etc/anxiousbot/delete_old_logs.sh
            endscript
          }
        owner: root
        group: root
        mode: 0644

    - name: Enable and start Anxiousbot Service
      systemd:
        name: anxiousbot
        state: started
        enabled: yes

