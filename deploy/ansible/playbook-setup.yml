---
- name: Wait for instances
  hosts: tag_Project_anxiousbot
  gather_facts: no
  tasks:
    - name: Wait for ssh access
      wait_for_connection:

- name: Configure instances
  hosts: tag_Project_anxiousbot
  become: yes
  vars_files:
    - vars/secrets.yml

  tasks:
    - name: Gather EC2 instance metadata
      ec2_metadata_facts:

    - name: Update all packages on Amazon Linux
      yum:
        name: '*'
        state: latest

    - name: Install required system packages
      yum:
        name:
          - git
          - python3.11
          - python3.11-pip
          - amazon-cloudwatch-agent
          - cronie
          - awscli
          - memcached
        state: latest

    - name: Install Poetry
      pip:
        name: poetry
        executable: pip3.11
        extra_args: --ignore-installed

    - name: Create CloudWatch Agent configuration directory
      file:
        path: /opt/aws/amazon-cloudwatch-agent/etc
        state: directory
        mode: '0755'

    - name: Create log directory
      file:
        path: /var/log/anxiousbot
        state: directory
        mode: '0755'

    - name: Create CloudWatch Agent configuration file
      copy:
        dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
        content: |
          {
            "agent": {
              "metrics_collection_interval": 60,
              "run_as_user": "root"
            },
            "metrics": {
              "append_dimensions": {
                "InstanceId": "${aws:InstanceId}"
              },
              "metrics_collected": {
                "cpu": {
                  "measurement": [
                    "cpu_usage_idle",
                    "cpu_usage_iowait",
                    "cpu_usage_user",
                    "cpu_usage_system"
                  ],
                  "metrics_collection_interval": 60,
                  "resources": [
                    "*"
                  ]
                },
                "mem": {
                  "measurement": [
                    "mem_used_percent"
                  ],
                  "metrics_collection_interval": 60
                },
                "net": {
                  "measurement": [
                    "bytes_sent",
                    "bytes_recv"
                  ],
                  "metrics_collection_interval": 60,
                  "resources": [
                    "*"
                  ]
                }
              }
            },
            "logs": {
              "log_stream_name": "anxiousbot_log_stream"
            }
          }

    - name: Clone the GitHub repository
      git:
        repo: 'https://{{ github_token }}@github.com/fmenezes/anxiousbot.git'
        dest: /opt/anxiousbot

    - name: Install dependencies with Poetry
      shell: |
        cd /opt/anxiousbot
        poetry install
      args:
        executable: /bin/bash

    - name: Copy systemd service file
      copy:
        dest: /etc/systemd/system/anxiousbot.service
        content: |
          [Unit]
          Description=Anxiousbot Service
          After=network.target

          [Service]
          User=root
          Group=root
          WorkingDirectory=/opt/anxiousbot
          ExecStart=/usr/local/bin/poetry run main
          Restart=always
          RestartSec=5s

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: 0644

    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: Symlink .env file
      ansible.builtin.file:
        src: /etc/anxiousbot/.env
        dest: /opt/anxiousbot/.env
        owner: root
        group: root
        state: link

    - name: add secrets to .env
      blockinfile:
        path: /opt/anxiousbot/.env
        block: |
          DEALS_FILE_PREFIX={{ ansible_ec2_instance_id }}_
          AWS_REGION={{ ansible_ec2_placement_region }}
          LOG_LEVEL=DEBUG
          LOG_HANDLER=CLOUD_WATCH
          LOG_GROUP_NAME=anxiousbot-logs
          LOG_STREAM_NAME={{ ansible_ec2_instance_id }}-logs
          BOT_TOKEN={{ bot_token }}
          BOT_CHAT_ID={{ bot_chat_id }}
          BINANCE_APIKEY={{ binance_apikey }}
          BINANCE_SECRET={{ binance_secret }}
          KUCOIN_APIKEY={{ kucoin_apikey }}
          KUCOIN_SECRET={{ kucoin_secret }}
          KUCOIN_PASSWORD={{ kucoin_password }}
          BITGET_APIKEY={{ bitget_apikey }}
          BITGET_SECRET={{ bitget_secret }}
          BITGET_PASSWORD={{ bitget_password }}
          BITMART_APIKEY={{ bitmart_apikey }}
          BITMART_SECRET={{ bitmart_secret }}
          BITMART_UID={{ bitmart_uid }}
          GATE_APIKEY={{ gate_apikey }}
          GATE_SECRET={{ gate_secret }}
          BINGX_APIKEY={{ bingx_apikey }}
          BINGX_SECRET={{ bingx_secret }}
          COINBASE_APIKEY={{ coinbase_apikey }}
          COINBASE_SECRET={{ coinbase_secret }}
        create: yes
        marker: ""

    - name: Enable and start CloudWatch Agent service
      systemd:
        name: amazon-cloudwatch-agent
        enabled: yes
        state: started

    - name: Add cronjob script
      copy:
        dest: /etc/anxiousbot/s3sync.sh
        content: |
          #!/bin/bash
          source "/opt/anxiousbot/.env"
          DATA_DIR="/opt/anxiousbot/data"
          aws s3 sync "$DATA_DIR" "s3://$S3BUCKET" --exclude .gitkeep
          ls -laA "$DATA_DIR" | grep -v "$(date +%Y-%m-%d).csv" | grep -v .gitkeep | xargs rm -rf
        owner: root
        group: root
        mode: 0744

    - name: Add cronjob
      cron:
        name: "Run script every hour"
        minute: "0"
        job: "/etc/anxiousbot/s3sync.sh >> /var/log/anxiousbot/s3sync.log 2>&1"

    - name: Enable and start Anxiousbot Service
      systemd:
        name: anxiousbot
        state: started
        enabled: yes

